package io.banking.whatsapp.users.domain.dto;

import com.fasterxml.jackson.annotation.JsonFormat;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;
import java.time.LocalDateTime;

/**
 * Data Transfer Object for user response data.
 * This class represents the data structure returned by the API when querying user information.
 * It includes all user details along with system-managed fields like status and timestamps.
 *
 * @author Marcelo Alejandro Albarrac√≠n
 * @email marceloalejandro.albarracin@gmail.com
 * @version 1.0.0
 * @since 2024-03-19
 */
@Data
@Schema(description = "User Response Data")
public class UserResponseDTO {

    /**
     * The unique identifier for the user.
     * Generated by the system when the user is created.
     */
    @Schema(description = "User ID", example = "123e4567-e89b-12d3-a456-426614174000")
    private String id;
    
    /**
     * The user's first name.
     * Part of the user's personal information.
     */
    @Schema(description = "User's first name", example = "John")
    private String firstName;
    
    /**
     * The user's last name.
     * Part of the user's personal information.
     */
    @Schema(description = "User's last name", example = "Doe")
    private String lastName;
    
    /**
     * The user's email address.
     * Used for communication and as a unique identifier in the system.
     */
    @Schema(description = "User's email address", example = "john.doe@example.com")
    private String email;
    
    /**
     * The user's phone number.
     * Used for WhatsApp communication and notifications.
     */
    @Schema(description = "User's phone number", example = "+1234567890")
    private String phoneNumber;
    
    /**
     * The user's DNI (National ID).
     * Used as a unique identifier for the user in the system.
     */
    @Schema(description = "User's DNI (National ID)", example = "12345678")
    private String dni;
    
    /**
     * The current status of the user in the system.
     * Possible values are:
     * - ACTIVE: User is active and can use the system
     * - INACTIVE: User is temporarily disabled
     * - BLOCKED: User is permanently blocked
     */
    @Schema(description = "User status", example = "ACTIVE", allowableValues = {"ACTIVE", "INACTIVE", "BLOCKED"})
    private String status;
    
    /**
     * The timestamp when the user was created.
     * Automatically set by the system during user creation.
     */
    @Schema(description = "Creation timestamp", example = "2024-02-15T10:30:00")
    @JsonFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
    private LocalDateTime createdAt;
    
    /**
     * The timestamp of the last update to the user's information.
     * Automatically updated by the system when any user data is modified.
     */
    @Schema(description = "Last update timestamp", example = "2024-02-15T10:30:00")
    @JsonFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
    private LocalDateTime updatedAt;
}